name: Build and Deploy Hugo Blog

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose an environment to deploy to: <staging|production>"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

env:
  HUGO_VERSION: "0.148.1"
  NODE_VERSION: "20"
  GO_VERSION: "1.21"

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Hugo Site
    outputs:
      build-environment: ${{ steps.determine-env.outputs.environment }}
      build-config: ${{ steps.determine-env.outputs.config }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: false

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Determine build environment and configuration
        id: determine-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
            echo "config=${{ (github.event.inputs.environment == 'production' && 'production') || 'development' }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "config=production" >> $GITHUB_OUTPUT
          else
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "config=development" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies and Build
        env:
          HUGO_ENV: ${{ steps.determine-env.outputs.config }}
          NODE_ENV: ${{ steps.determine-env.outputs.config }}
          PRODUCTION_URL: ${{ steps.determine-env.outputs.config == 'production' && vars.PRODUCTION_URL || '' }}
        run: |
          npm ci
          echo "Building with configuration: ${{ steps.determine-env.outputs.config }}"
          npm run build:${{ (steps.determine-env.outputs.config == 'production' && 'prod') || 'dev' }}

      - name: Validate build output
        run: npm run validate:build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hugo-build-${{ github.run_id }}
          path: public/
          retention-days: 7

  deploy_staging:
    needs: build
    name: Deploy to Staging
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging') || (github.event_name == 'push' && github.ref == 'refs/heads/develop')
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      environment_name: staging
      environment_url: ${{ vars.STAGING_URL }}
      artifact_name: hugo-build-${{ github.run_id }}
    secrets:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  deploy_production:
    needs: build
    name: Deploy to Production
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production') || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    uses: ./.github/workflows/reusable-deploy.yml
    with:
      environment_name: production
      environment_url: ${{ vars.PRODUCTION_URL }}
      artifact_name: hugo-build-${{ github.run_id }}
    secrets:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}